{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n  }\n  saveOrUpdateUser() {\n    var body = {\n      ...this.studentData\n    };\n    return this.http.post(environment.apiURL + '/Student', body);\n  }\n  getStudentList() {\n    return this.http.get(environment.apiURL + '/Student').toPromise();\n  }\n  getStudentByID(id) {\n    return this.http.get(environment.apiURL + '/Student/' + id).toPromise();\n  }\n  deleteStudent(id, Comment) {\n    var body = {\n      ID: id,\n      Delcomment: Comment\n    };\n    debugger;\n    return this.http.post(environment.apiURL + '/DeleteStudent/', body);\n  }\n}\n_class = StudentService;\n_class.ɵfac = function StudentService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","StudentService","constructor","http","saveOrUpdateUser","body","studentData","post","apiURL","getStudentList","get","toPromise","getStudentByID","id","deleteStudent","Comment","ID","Delcomment","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SOLUTION X\\Desktop\\Student Registration\\Student\\src\\app\\shared\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Student } from './student.model';\nimport {HttpClient} from '@angular/common/http'\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  studentData !: Student;\n\n  constructor(private http:HttpClient) { }\n\n  saveOrUpdateUser(){\n    var body = {\n      ...this.studentData\n    }\n    return this.http.post(environment.apiURL + '/Student', body)\n  }\n\n  getStudentList(){\n    return this.http.get(environment.apiURL + '/Student').toPromise();\n  }\n\n  getStudentByID(id:number):any{\n    return this.http.get(environment.apiURL + '/Student/' + id).toPromise();\n  }\n\n  deleteStudent(id:number, Comment:string){\n    var body = {\n      ID : id,\n      Delcomment : Comment\n    }\n    debugger\n    return this.http.post(environment.apiURL + '/DeleteStudent/', body)\n  }\n}\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,0CAA0C;;;AAKtE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACd,IAAIC,IAAI,GAAG;MACT,GAAG,IAAI,CAACC;KACT;IACD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACP,WAAW,CAACQ,MAAM,GAAG,UAAU,EAAEH,IAAI,CAAC;EAC9D;EAEAI,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAACV,WAAW,CAACQ,MAAM,GAAG,UAAU,CAAC,CAACG,SAAS,EAAE;EACnE;EAEAC,cAAcA,CAACC,EAAS;IACtB,OAAO,IAAI,CAACV,IAAI,CAACO,GAAG,CAACV,WAAW,CAACQ,MAAM,GAAG,WAAW,GAAGK,EAAE,CAAC,CAACF,SAAS,EAAE;EACzE;EAEAG,aAAaA,CAACD,EAAS,EAAEE,OAAc;IACrC,IAAIV,IAAI,GAAG;MACTW,EAAE,EAAGH,EAAE;MACPI,UAAU,EAAGF;KACd;IACD;IACA,OAAO,IAAI,CAACZ,IAAI,CAACI,IAAI,CAACP,WAAW,CAACQ,MAAM,GAAG,iBAAiB,EAAEH,IAAI,CAAC;EACrE;;SA3BWJ,cAAc;;mBAAdA,MAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdpB,MAAc;EAAAqB,OAAA,EAAdrB,MAAc,CAAAsB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}